name: Jenkins Job Status Check

on:
  schedule:
    - cron: '*/1 * * * *' # This will check the job status every 1 minute
  workflow_dispatch: # This allows manual triggering of the workflow

jobs:
  check-jenkins-status:
    runs-on: ubuntu-latest
    steps:
      - name: Check Jenkins Job Status
        id: jenkins-status
        run: |
          JOB_NAME="myfirstjob"
          JENKINS_URL="http://45.79.122.237:8080"
          USERNAME="${{ secrets.JENKINS_USER }}"
          TOKEN="${{ secrets.JENKINS_API_TOKEN }}"

          # Fetch the Jenkins Crumb
          CRUMB=$(curl -s -u $USERNAME:$TOKEN "$JENKINS_URL/crumbIssuer/api/json" | jq -r '.crumb')

          # Get the job status from Jenkins
          RESPONSE=$(curl -s -u $USERNAME:$TOKEN -H "Jenkins-Crumb:$CRUMB" "$JENKINS_URL/job/$JOB_NAME/lastBuild/api/json")
          
          # Print the raw Jenkins API response for debugging
          echo "Raw Jenkins API Response: $RESPONSE"

          # Parse the job status using jq
          STATUS=$(echo "$RESPONSE" | jq -r '.result' || echo "ERROR")

          if [ "$STATUS" == "null" ]; then
            echo "Job is running or has never been built."
            STATUS="RUNNING"
          elif [ "$STATUS" == "ERROR" ]; then
            echo "Error parsing the Jenkins API response. Please check the raw response above."
            exit 1
          fi

          echo "Job Status: $STATUS"

          # Set the job status as an output
          echo "::set-output name=status::$STATUS"

      - name: Update STATUS.md with Job Status
        run: |
          # Define badge color based on job status
          if [ "${{ steps.jenkins-status.outputs.status }}" == "SUCCESS" ]; then
            COLOR="green"
          elif [ "${{ steps.jenkins-status.outputs.status }}" == "FAILURE" ]; then
            COLOR="red"
          elif [ "${{ steps.jenkins-status.outputs.status }}" == "UNSTABLE" ]; then
            COLOR="yellow"
          elif [ "${{ steps.jenkins-status.outputs.status }}" == "RUNNING" ]; then
            COLOR="blue"
          else
            COLOR="lightgrey"
          fi

          # Update STATUS.md with the job status badge
          echo "![Jenkins Job Status](https://img.shields.io/badge/Jenkins-${{ steps.jenkins-status.outputs.status }}-$COLOR?style=flat-square)" > STATUS.md

      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add STATUS.md
          git commit -m "Update Jenkins job status badge"
          git push
