name: Jenkins Parameterized Job Status Check with Trigger

on:
  workflow_dispatch:
    inputs:
      directory_name:
        description: "Name of the directory to be created"
        required: true
        default: "testdir"
      file_name:
        description: "Name of the text file to be created"
        required: true
        default: "testfile.txt"
      file_content:
        description: "Content of the text file"
        required: true
        default: "This is a test content."

jobs:
  trigger-and-check-jenkins:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Jenkins Parameterized Job
        id: trigger-jenkins
        run: |
          JOB_NAME="parameterized-job"
          JENKINS_URL="http://45.79.122.237:8080"
          USERNAME="coral"
          TOKEN="11a6a553d88e61d4bc691f2c8e6c0cad98"
          DIRECTORY_NAME="${{ github.event.inputs.directory_name }}"
          FILE_NAME="${{ github.event.inputs.file_name }}"
          FILE_CONTENT="${{ github.event.inputs.file_content }}"
          
          # Trigger the Jenkins parameterized job with inputs
          curl -X POST -u $USERNAME:$TOKEN "$JENKINS_URL/job/$JOB_NAME/buildWithParameters?DIRECTORY_NAME=$DIRECTORY_NAME&FILE_NAME=$FILE_NAME&FILE_CONTENT=$FILE_CONTENT"
          
          echo "Jenkins parameterized job triggered."

      - name: Check Jenkins Job Status
        id: jenkins-status
        run: |
          JOB_NAME="parameterized-job"
          JENKINS_URL="http://45.79.122.237:8080"
          USERNAME="coral"
          TOKEN="11a6a553d88e61d4bc691f2c8e6c0cad98"
          
          # Get the job status from Jenkins
          STATUS=$(curl -s -u $USERNAME:$TOKEN $JENKINS_URL/job/$JOB_NAME/lastBuild/api/json | jq -r '.result')

          if [ "$STATUS" == "null" ]; then
            echo "Job is running or has never been built."
            STATUS="RUNNING"
          fi

          echo "Job Status: $STATUS"

          # Set the job status as an output
          echo "::set-output name=status::$STATUS"

      - name: Update STATUS.md with Job Status
        run: |
          # Define badge color based on job status
          if [ "${{ steps.jenkins-status.outputs.status }}" == "SUCCESS" ]; then
            COLOR="green"
          elif [ "${{ steps.jenkins-status.outputs.status }}" == "FAILURE" ]; then
            COLOR="red"
          elif [ "${{ steps.jenkins-status.outputs.status }}" == "UNSTABLE" ]; then
            COLOR="yellow"
          else
            COLOR="blue"
          fi

          # Update STATUS.md with the job status badge
          echo "![Jenkins Job Status](https://img.shields.io/badge/Jenkins-${{ steps.jenkins-status.outputs.status }}-$COLOR?style=flat-square)" > STATUS.md
